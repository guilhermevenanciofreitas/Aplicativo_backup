@inherits ListItemViewLayoutPage

<ViewModal @ref="ViewFiltro" FullScreen="false">

    <DialogTitle Style="marging: 0px; padding: 16px;"
                 DisableTypography
                 Id="customized-dialog-title">
        <Typography Variant="@TypographyVariant.H6">
            Filtro
        </Typography>
        <IconButton aria-label="close"
                    Style="top: 8px; color: #9e9e9e; right: 8px; position: absolute;"
                    OnClick="ViewFiltro_Close">
            <CloseIcon />
        </IconButton>
    </DialogTitle>
    <DialogContent Style="padding: 16px;"
                   Dividers>

        <div style="width: 460px; height: 360px;">

            @if (Filtros != null)
            {
                @foreach (var item in Filtros)
                {

                    if (item.Type == FiltroType.TextBox)
                    {
                        <TextBox @ref="item.Element[0]" _Label="@item.Label"></TextBox>
                    }

                }
            }


        </div>

    </DialogContent>
    <DialogActions Style="marging: 0px; padding: 8px;">
        <Button OnClick="ViewFiltro_Confirmar" Color="@Color.Primary">
            Confirmar
        </Button>
    </DialogActions>

</ViewModal>

<ViewModal @ref="ViewModal" FullScreen="true">
    @View
</ViewModal>

@if (ListItemView.Any(c => c.Bool01 == true))
{
    <AppBar>
        <Toolbar>
            <IconButton Edge="@IconButtonEdge.Start" Color="@Color.Inherit" OnClick="ListItemView_Unmake">
                <ArrowBackIcon />
            </IconButton>
            <Typography Variant="@TypographyVariant.H6" Style="flex-grow: 1;">
                @ListItemView.Where(c => c.Bool01 == true).Count()  Selecionado(s)
            </Typography>
        </Toolbar>
    </AppBar>
}

<Button Variant="@ButtonVariant.Contained" OnClick="BtnFiltro_Click">
    <StartIcon>
        <FilterListIcon />
    </StartIcon>
    <ChildContent>
        Filtro
    </ChildContent>
</Button>

<Button Variant="@ButtonVariant.Contained" Color="@Color.Primary" OnClick="BtnPesquisar_Click">
    <StartIcon>
        <SearchIcon />
    </StartIcon>
    <ChildContent>
        Pesquisar
    </ChildContent>
</Button>

<List>
    @foreach (var item in ListItemView)
    {
    <LongPress OnLongPress="@(() => ListItemView_LongPress(item))" OnPress="@(() => ListItemView_Press(item))">
        <ListItem AlignItems="@AlignItems.FlexStart" Button="true">
            @if (ListItemView.Any(c => c.Bool01 == true))
            {
                <ListItemIcon>
                    <CheckBox _Checked="@(item.Bool01 ?? false)" />
                </ListItemIcon>
            }
            @ItemView(item)
        </ListItem>
        <Divider Variant="@DividerVariant.Inset" Component="li" />
    </LongPress>
    }
</List>

<Scale Class="fab-button" In="!ListItemView.Any(c => c.Bool01 == true)">
    <Fab Color="@Color.Primary" OnClick="BtnNovo_Click" Style="background-color: #5cb85c">
        <AddIcon></AddIcon>
    </Fab>
</Scale>

<Scale Class="fab-button" In="ListItemView.Any(c => c.Bool01 == true)">
    <Fab Style="color: #fff; background-color: #df4759;" OnClick="BtnExcluir_Click">
        <DeleteIcon></DeleteIcon>
    </Fab>
</Scale>